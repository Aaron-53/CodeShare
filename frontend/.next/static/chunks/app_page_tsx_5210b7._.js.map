{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhay/Documents/Codebase/codeshare-aaron/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  ChevronDown,\n  ChevronRight,\n  Copy,\n  Download,\n  FileIcon,\n  Save,\n  RefreshCw,\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { io, Socket } from \"socket.io-client\";\nimport type { FileSystemNode } from \"@/types/filesystem\";\nimport type {\n  ServerToClientEvents,\n  ClientToServerEvents,\n  ServerFile,\n} from \"@/types/server\";\n\nexport default function SocketCodeEditor() {\n  const [files, setFiles] = useState<FileSystemNode | null>(null);\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n  const [selectedFilePath, setSelectedFilePath] = useState<string[]>([\"\"]);\n  const [expandedFolders, setExpandedFolders] = useState<Set<string>>(\n    new Set([\"root\"])\n  );\n  const [isFileTreeVisible, setIsFileTreeVisible] = useState(true);\n  const [lineNumbers, setLineNumbers] = useState<number[]>([]);\n  const [fileContent, setFileContent] = useState<string>(\"\");\n  const socketRef = useRef<Socket<\n    ServerToClientEvents,\n    ClientToServerEvents\n  > | null>(null);\n  const selectedFileRef = useRef<string | null>(null);\n\n  useEffect(() => {\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n    socketRef.current = io(API_URL);\n\n    socketRef.current.emit(\"reqFileSystemFromServer\", {\n      message: \"Requesting file system data\",\n    });\n\n    socketRef.current.on(\"sendFileSystemFromServer\", (data: any) => {\n      const convertedData = convertServerFilesToFileSystemNode(data);\n      setFiles(convertedData);\n      console.log(\"Received file system data:\", data);\n    });\n\n    socketRef.current.on(\"sendFileContentFromServer\", (data: any) => {\n      setSelectedFile(data.name);\n      selectedFileRef.current = data.name;\n      setFileContent(data.content);\n\n      const lines = data.content.split(\"\\n\");\n      setLineNumbers(Array.from({ length: lines.length }, (_, i) => i + 1));\n\n      if (files) {\n        const path = findFilePath(files, data.name);\n        if (path) {\n          setSelectedFilePath(path);\n        }\n      }\n\n      console.log(\"Received file content for:\", data.name);\n    });\n\n    socketRef.current.on(\"fileSavedFromServer\", (docName: string) => {\n      toast.success(`${docName} saved successfully`);\n      console.log(`${docName} saved. Refreshing...`);\n\n      socketRef.current.emit(\"reqFileSystemFromServer\", {\n        message: \"Refreshing file system\",\n      });\n\n      if (selectedFileRef.current) {\n        socketRef.current.emit(\n          \"reqFileContentFromServer\",\n          selectedFileRef.current\n        );\n      }\n    });\n\n    return () => {\n      socketRef.current.off(\"sendFileSystemFromServer\");\n      socketRef.current.off(\"sendFileContentFromServer\");\n      socketRef.current.off(\"fileSavedFromServer\");\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (files && selectedFile) {\n      const path = findFilePath(files, selectedFile);\n      if (path) {\n        setSelectedFilePath(path);\n      }\n    }\n  }, [files, selectedFile]);\n\n  const convertServerFilesToFileSystemNode = (\n    serverFiles: ServerFile[]\n  ): FileSystemNode => {\n    const rootNode: FileSystemNode = {\n      name: \"root\",\n      type: \"folder\",\n      children: [],\n    };\n\n    const processFiles = (files: ServerFile[], parentNode: FileSystemNode) => {\n      files\n        .filter((file) => file.isFolder && !file.isHidden)\n        .forEach((folder) => {\n          const folderNode: FileSystemNode = {\n            name: folder.name,\n            type: \"folder\",\n            children: [],\n          };\n\n          parentNode.children?.push(folderNode);\n\n          if (folder.subFolder) {\n            processFiles(folder.subFolder, folderNode);\n          }\n        });\n\n      files\n        .filter((file) => !file.isFolder && !file.isHidden)\n        .forEach((file) => {\n          const fileNode: FileSystemNode = {\n            name: file.name,\n            type: \"file\",\n            content: \"\",\n          };\n\n          parentNode.children?.push(fileNode);\n        });\n    };\n\n    if (Array.isArray(serverFiles)) {\n      processFiles(serverFiles, rootNode);\n    }\n\n    return rootNode;\n  };\n\n  const toggleFolder = (path: string) => {\n    const newExpanded = new Set(expandedFolders);\n    if (newExpanded.has(path)) {\n      newExpanded.delete(path);\n    } else {\n      newExpanded.add(path);\n    }\n    setExpandedFolders(newExpanded);\n  };\n\n  const findFilePath = (\n    node: FileSystemNode,\n    targetName: string,\n    currentPath: string[] = []\n  ): string[] | null => {\n    if (node.type === \"file\" && node.name === targetName) {\n      return [...currentPath, node.name];\n    }\n    if (node.children) {\n      for (const child of node.children) {\n        const path = findFilePath(\n          child,\n          targetName,\n          [...currentPath, node.name === \"root\" ? \"\" : node.name].filter(\n            Boolean\n          )\n        );\n        if (path) return path;\n      }\n    }\n    return null;\n  };\n\n  const copyToClipboard = async () => {\n    if (!selectedFile) {\n      toast.error(\"No file selected!\");\n      return;\n    }\n\n    if (fileContent) {\n      await navigator.clipboard.writeText(fileContent);\n      toast.success(\"Code copied to clipboard!\");\n    }\n  };\n\n  const downloadFile = () => {\n    if (!selectedFile) {\n      toast.error(\"No file selected!\");\n      return;\n    }\n\n    if (fileContent) {\n      const blob = new Blob([fileContent], { type: \"text/plain\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = selectedFile;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      toast.success(\"File downloaded successfully!\");\n    }\n  };\n\n  const saveFile = () => {\n    if (!selectedFile || !fileContent) {\n      toast.error(\"No file selected!\");\n      return;\n    }\n\n    socketRef.current.emit(\"saveFileToServer\", {\n      name: selectedFile,\n      content: fileContent,\n    });\n\n    toast.info(\"Saving file...\");\n  };\n\n  const refreshFiles = () => {\n    socketRef.current.emit(\"reqFileSystemFromServer\", {\n      message: \"Refreshing file system\",\n    });\n    toast.info(\"Refreshing file system...\");\n  };\n\n  const selectFile = (fileName: string) => {\n    setSelectedFile(fileName);\n    selectedFileRef.current = fileName;\n\n    socketRef.current.emit(\"reqFileContentFromServer\", fileName);\n  };\n\n  const renderFileTree = (\n    node: FileSystemNode,\n    path = \"\",\n    level = 0\n  ): React.ReactNode => {\n    if (node.name === \"root\" && node.children) {\n      return (\n        <>{node.children.map((child) => renderFileTree(child, \"\", level))}</>\n      );\n    }\n\n    const currentPath = path ? `${path}/${node.name}` : node.name;\n    const isExpanded = expandedFolders.has(currentPath);\n\n    return (\n      <div key={currentPath} style={{ paddingLeft: level === 0 ? 0 : 12 }}>\n        <div\n          className={`flex items-center py-1 my-[3px] px-[8px] rounded-lg hover:bg-[#1d1d1d] cursor-pointer ${\n            selectedFile === node.name ? \"bg-[#1d1d1d]\" : \"\"\n          }`}\n          onClick={() => {\n            if (node.type === \"folder\") {\n              toggleFolder(currentPath);\n            } else {\n              selectFile(node.name);\n            }\n          }}\n        >\n          {node.type === \"folder\" ? (\n            <>\n              {isExpanded ? (\n                <ChevronDown className=\"w-4 h-4 mr-[5.4px] text-gray-400\" />\n              ) : (\n                <ChevronRight className=\"w-4 h-4 mr-[5.4px] text-gray-400\" />\n              )}\n            </>\n          ) : (\n            <FileIcon className=\"w-4 h-4 mr-[5.7px] text-blue-400\" />\n          )}\n          <span className=\"text-sm font-normal\">{node.name}</span>\n        </div>\n        {node.type === \"folder\" && isExpanded && node.children && (\n          <div>\n            {node.children.map((child) =>\n              renderFileTree(child, currentPath, level + 1)\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setFileContent(e.target.value);\n\n    const lines = e.target.value.split(\"\\n\");\n    setLineNumbers(Array.from({ length: lines.length }, (_, i) => i + 1));\n  };\n\n  return (\n    <div className=\"h-screen flex bg-zinc-950 text-zinc-100\">\n      {/* Sidebar */}\n      {isFileTreeVisible && (\n        <div className=\"w-64 border-r border-zinc-800 flex flex-col overflow-hidden relative px-2 py-1\">\n          <div className=\"flex justify-between items-center p-2 border-b border-zinc-800 h-[44px]\">\n            <h3 className=\"text-sm font-medium\">Workspace</h3>\n            <button\n              onClick={refreshFiles}\n              className=\"p-[6px] rounded hover:bg-zinc-800\"\n              title=\"Refresh files\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n            </button>\n          </div>\n          <div className=\"flex-1 overflow-auto py-2\">\n            {files ? (\n              renderFileTree(files)\n            ) : (\n              <div className=\"p-2 text-sm text-gray-400\">Loading...</div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-hidden flex flex-col\">\n        {/* Top Bar with File Path */}\n        <div className=\"flex items-center px-4 py-2 border-b border-zinc-800 text-sm text-gray-400 min-h-[48px]\">\n          {selectedFilePath.map((segment, index) => (\n            <div key={index} className=\"flex items-center\">\n              {index > 0 && (\n                <ChevronRight className=\"w-3 h-3 mx-1 text-gray-600\" />\n              )}\n              <span>{segment}</span>\n            </div>\n          ))}\n          <div className=\"ml-auto flex gap-2\">\n            <button\n              onClick={saveFile}\n              className=\"p-[6px] rounded hover:bg-zinc-800\"\n              title=\"Save file\"\n            >\n              <Save className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={copyToClipboard}\n              className=\"p-[6px] rounded hover:bg-zinc-800\"\n              title=\"Copy code\"\n            >\n              <Copy className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={downloadFile}\n              className=\"p-[6px] rounded hover:bg-zinc-800\"\n              title=\"Download file\"\n            >\n              <Download className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Code Content - Now editable */}\n        <div className=\"flex-1 overflow-auto bg-zinc-950\">\n          {selectedFile ? (\n            <div className=\"flex min-h-[100%] h-fit\">\n              {/* Line Numbers */}\n              <div className=\"p-4 text-xs font-mono leading-5 text-gray-500 select-none border-r border-zinc-800 bg-zinc-900 top-0 h-full min-h-screen\">\n                {lineNumbers.map((num) => (\n                  <div key={num}>{num}</div>\n                ))}\n              </div>\n              {/* Code - Using textarea for editability */}\n              <textarea\n                className=\"p-4 text-xs font-mono leading-5 flex-1 bg-zinc-950 text-zinc-100 border-none outline-none resize-none w-full\"\n                value={fileContent}\n                onChange={handleContentChange}\n                spellCheck={false}\n              />\n            </div>\n          ) : (\n            <div className=\"flex h-screen\">\n              <div className=\"p-4 text-xs font-mono leading-5 text-gray-500 select-none border-r border-zinc-800 bg-zinc-900 h-full top-0\">\n                1\n              </div>\n              <pre className=\"p-4 text-xs font-mono leading-5 flex-1\">{`// Select a file to view its contents`}</pre>\n            </div>\n          )}\n        </div>\n\n        {/* Toggle Button */}\n        <button\n          className=\"fixed bottom-4 left-4 w-8 h-8 flex items-center justify-center bg-zinc-900 hover:bg-zinc-800 rounded-sm shadow-lg z-50 border-2 border-white/[0.06]\"\n          onClick={() => setIsFileTreeVisible(!isFileTreeVisible)}\n        >\n          {isFileTreeVisible ? (\n            <svg\n              width=\"15\"\n              height=\"15\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M4.66675 8H14\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n              <path\n                d=\"M8.66675 12L4.66675 8L8.66675 4\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n              <path\n                d=\"M2 3.33203V12.6654\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n            </svg>\n          ) : (\n            <svg\n              width=\"15\"\n              height=\"15\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.3333 8H2\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n              <path\n                d=\"M7.33325 12L11.3333 8L7.33325 4\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n              <path\n                d=\"M14 3.33203V12.6654\"\n                stroke=\"currentcolor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n            </svg>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}